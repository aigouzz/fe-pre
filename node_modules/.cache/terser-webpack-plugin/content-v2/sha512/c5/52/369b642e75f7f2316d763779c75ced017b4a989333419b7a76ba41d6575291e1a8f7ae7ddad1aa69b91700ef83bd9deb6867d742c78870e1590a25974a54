{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{290:function(t,s,a){t.exports=a.p+\"assets/img/http13-1.52823552.png\"},440:function(t,s,a){\"use strict\";a.r(s);var e=a(10),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"p\",[s(\"font\",{staticStyle:{\"font-size\":\"36px\"}},[t._v(\"对于WebSocket的理解及其特性\")])],1),t._v(\" \"),s(\"h2\",{attrs:{id:\"一、是什么\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一、是什么\"}},[t._v(\"#\")]),t._v(\" 一、是什么\")]),t._v(\" \"),s(\"p\",[t._v(\"WebSocket，是一种网络传输协议，位于OSI模型的应用层。可在单个TCP连接上进行全双工通信，能更好的节省服务器资源和带宽并达到实时通迅\")]),t._v(\" \"),s(\"p\",[t._v(\"客户端和服务器只需要完成一次握手，两者之间就可以创建持久性的连接，并进行双向数据传输\")]),t._v(\" \"),s(\"img\",{attrs:{src:a(290)}}),t._v(\" \"),s(\"p\",[t._v(\"从上图可见，websocket服务器与客户端通过握手连接，连接成功后，两者都能主动的向对方发送或接受数据\")]),t._v(\" \"),s(\"p\",[t._v(\"而在websocket出现之前，开发实时web应用的方式为轮询\")]),t._v(\" \"),s(\"p\",[t._v(\"不停地向服务器发送 HTTP 请求，问有没有数据，有数据的话服务器就用响应报文回应。如果轮询的频率比较高，那么就可以近似地实现“实时通信”的效果\")]),t._v(\" \"),s(\"p\",[t._v(\"轮询的缺点也很明显，反复发送无效查询请求耗费了大量的带宽和 CPU资源\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"二、特点\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二、特点\"}},[t._v(\"#\")]),t._v(\" 二、特点\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"全双工\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#全双工\"}},[t._v(\"#\")]),t._v(\" 全双工\")]),t._v(\" \"),s(\"p\",[t._v(\"通信允许数据在两个方向上同时传输，它在能力上相当于两个单工通信方式的结合\")]),t._v(\" \"),s(\"p\",[t._v(\"例如指 A→B 的同时 B→A ，是瞬时同步的\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"二进制帧\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二进制帧\"}},[t._v(\"#\")]),t._v(\" 二进制帧\")]),t._v(\" \"),s(\"p\",[t._v(\"采用了二进制帧结构，语法、语义与 HTTP 完全不兼容，相比http/2，WebSocket更侧重于“实时通信”，而HTTP/2 更侧重于提高传输效率，所以两者的帧结构也有很大的区别\")]),t._v(\" \"),s(\"p\",[t._v(\"不像 HTTP/2 那样定义流，也就不存在多路复用、优先级等特性\")]),t._v(\" \"),s(\"p\",[t._v(\"自身就是全双工，也不需要服务器推送\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"协议名\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#协议名\"}},[t._v(\"#\")]),t._v(\" 协议名\")]),t._v(\" \"),s(\"p\",[t._v(\"引入ws和wss分别代表明文和密文的websocket协议，且默认端口使用80或443，几乎与http一致\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token literal-property property\"}},[t._v(\"ws\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"www\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"chrono\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"com\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token literal-property property\"}},[t._v(\"ws\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"www\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"chrono\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"com\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"8080\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"srv\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token literal-property property\"}},[t._v(\"wss\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"www\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"chrono\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"com\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"445\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"im\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"?\")]),t._v(\"user_id\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\"xxx\\n\")])])]),s(\"h3\",{attrs:{id:\"握手\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#握手\"}},[t._v(\"#\")]),t._v(\" 握手\")]),t._v(\" \"),s(\"p\",[t._v(\"WebSocket也要有一个握手过程，然后才能正式收发数据\")]),t._v(\" \"),s(\"p\",[t._v(\"客户端发送数据格式如下：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"chat \"),s(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"HTTP\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1.1\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token literal-property property\"}},[t._v(\"Host\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" server\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"example\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"com\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token literal-property property\"}},[t._v(\"Upgrade\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" websocket\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token literal-property property\"}},[t._v(\"Connection\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" Upgrade\\nSec\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"WebSocket\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"Key\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" dGhlIHNhbXBsZSBub25jZQ\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token literal-property property\"}},[t._v(\"Origin\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" http\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"example\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"com\\nSec\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"WebSocket\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"Protocol\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" chat\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" superchat\\nSec\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"WebSocket\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"Version\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"13\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"Connection：必须设置Upgrade，表示客户端希望连接升级\")]),t._v(\" \"),s(\"li\",[t._v(\"Upgrade：必须设置Websocket，表示希望升级到Websocket协议\")]),t._v(\" \"),s(\"li\",[t._v(\"Sec-WebSocket-Key：客户端发送的一个 base64 编码的密文，用于简单的认证秘钥。要求服务端必须返回一个对应加密的“Sec-WebSocket-Accept应答，否则客户端会抛出错误，并关闭连接\")]),t._v(\" \"),s(\"li\",[t._v(\"Sec-WebSocket-Version ：表示支持的Websocket版本\")])]),t._v(\" \"),s(\"p\",[t._v(\"服务端返回的数据格式：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"HTTP\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1.1\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"101\")]),t._v(\" Switching Protocols\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token literal-property property\"}},[t._v(\"Upgrade\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" websocket\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token literal-property property\"}},[t._v(\"Connection\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" Upgrade\\nSec\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"WebSocket\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"Accept\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" s3pPLMBiTxaQ9kYGzzhZRbK\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\"xOo\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\"Sec\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"WebSocket\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"Protocol\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" chat\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"HTTP/1.1 101 Switching Protocols：表示服务端接受 WebSocket 协议的客户端连接\")]),t._v(\" \"),s(\"li\",[t._v(\"Sec-WebSocket-Accep：验证客户端请求报文，同样也是为了防止误连接。具体做法是把请求头里\")]),t._v(\" \"),s(\"li\",[t._v(\"“Sec-WebSocket-Key”的值，加上一个专用的 UUID，再计算摘要\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"优点\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#优点\"}},[t._v(\"#\")]),t._v(\" 优点\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"较少的控制开销：数据包头部协议较小，不同于http每次请求需要携带完整的头部\")]),t._v(\" \"),s(\"li\",[t._v(\"更强的实时性：相对于HTTP请求需要等待客户端发起请求服务端才能响应，延迟明显更少\")]),t._v(\" \"),s(\"li\",[t._v(\"保持创连接状态：创建通信后，可省略状态信息，不同于HTTP每次请求需要携带身份验证\")]),t._v(\" \"),s(\"li\",[t._v(\"更好的二进制支持：定义了二进制帧，更好处理二进制内容\")]),t._v(\" \"),s(\"li\",[t._v(\"支持扩展：用户可以扩展websocket协议、实现部分自定义的子协议\")]),t._v(\" \"),s(\"li\",[t._v(\"更好的压缩效果：Websocket在适当的扩展支持下，可以沿用之前内容的上下文，在传递类似的数据时，可以显著地提高压缩率\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"二、应用场景\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二、应用场景\"}},[t._v(\"#\")]),t._v(\" 二、应用场景\")]),t._v(\" \"),s(\"p\",[t._v(\"基于websocket的事实通信的特点，其存在的应用场景大概有：\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"弹幕\")]),t._v(\" \"),s(\"li\",[t._v(\"媒体聊天\")]),t._v(\" \"),s(\"li\",[t._v(\"协同编辑\")]),t._v(\" \"),s(\"li\",[t._v(\"基于位置的应用\")]),t._v(\" \"),s(\"li\",[t._v(\"体育实况更新\")]),t._v(\" \"),s(\"li\",[t._v(\"股票基金报价实时更新\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"参考文献\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#参考文献\"}},[t._v(\"#\")]),t._v(\" 参考文献\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"https://zh.wikipedia.org/wiki/WebSocket\")]),t._v(\" \"),s(\"li\",[t._v(\"https://www.oschina.net/translate/9-killer-uses-for-websockets\")])])])}),[],!1,null,null,null);s.default=r.exports}}]);","extractedComments":[]}